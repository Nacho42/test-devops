apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: ci
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-builder-secrets
              key: mysql-root-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: api-builder-secrets
              key: database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: api-builder-secrets
              key: db-user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-builder-secrets
              key: db-password
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-initdb
        configMap:
          name: mysql-initdb-config
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: ci
data:
  initdb.sql: |
    CREATE DATABASE IF NOT EXISTS beans;
    USE beans;
    CREATE TABLE beans (external_id INT, name VARCHAR(256), repository_path VARCHAR(256), version VARCHAR(20), PRIMARY KEY (external_id));
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ci
spec:
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 3307
      targetPort: 3306
  selector:
    app: mysql